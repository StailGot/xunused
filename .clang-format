---
Language: Cpp
Standard: c++17

TabWidth: 2
UseTab: Never
#UseCRLF: ??

AccessModifierOffset: -2
AlignAfterOpenBracket: Align
AlignConsecutiveMacros: Consecutive
AlignConsecutiveAssignments: None
AlignConsecutiveDeclarations: None
AlignEscapedNewlines: Right
AlignOperands: AlignAfterOperator
AlignTrailingComments: true
AllowAllArgumentsOnNextLine: false
AllowAllConstructorInitializersOnNextLine: false
AllowAllParametersOfDeclarationOnNextLine: false
AllowShortBlocksOnASingleLine: false
AllowShortCaseLabelsOnASingleLine: false
AllowShortFunctionsOnASingleLine: InlineOnly
AllowShortLambdasOnASingleLine: Inline
AllowShortIfStatementsOnASingleLine: Never
AllowShortLoopsOnASingleLine: false
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: false
AlwaysBreakTemplateDeclarations: Yes
BinPackArguments: true
BinPackParameters: true
BitFieldColonSpacing: Both
BraceWrapping:
  AfterCaseLabel:  true
  AfterClass:      true
  AfterControlStatement: Always
  AfterEnum:       true
  AfterFunction:   true
  AfterNamespace:  true
  AfterStruct:     true
  AfterUnion:      true
  AfterExternBlock: true
  BeforeCatch:     true
  BeforeElse:      true
  BeforeLambdaBody: true
  IndentBraces:    false
  SplitEmptyFunction: true
  SplitEmptyRecord: true
  SplitEmptyNamespace: true
BreakBeforeBinaryOperators: None 
BreakBeforeBraces: Custom
BreakBeforeConceptDeclarations: true
BreakBeforeInheritanceComma: false
BreakInheritanceList: AfterComma
BreakBeforeTernaryOperators: true
BreakConstructorInitializersBeforeComma: false
BreakConstructorInitializers: BeforeComma
BreakStringLiterals: false
ColumnLimit: 130
#CommentPragmas:  '^ IWYU pragma:'
CompactNamespaces: false
ConstructorInitializerAllOnOneLineOrOnePerLine: false
ConstructorInitializerIndentWidth: 2
ContinuationIndentWidth: 2
Cpp11BracedListStyle: true
DerivePointerAlignment: false
DisableFormat:   false
ExperimentalAutoDetectBinPacking: false
FixNamespaceComments: true
#ForEachMacros:
#  - foreach
#  - Q_FOREACH
#  - BOOST_FOREACH
IncludeBlocks: Preserve
#IncludeCategories:
#  - Regex:           '^"(llvm|llvm-c|clang|clang-c)/'
#    Priority:        2
#  - Regex:           '^(<|"(gtest|gmock|isl|json)/)'
#    Priority:        3
#  - Regex:           '.*'
#    Priority:        1
#IncludeIsMainRegex: '(Test)?$'
IndentCaseLabels: true
IndentPPDirectives: None
IndentRequires: false
IndentWidth: 2
IndentWrappedFunctionNames: false
KeepEmptyLinesAtTheStartOfBlocks: false
MaxEmptyLinesToKeep: 2
NamespaceIndentation: None
PenaltyBreakAssignment: 10
PenaltyBreakBeforeFirstCallParameter: 1000
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 120
PenaltyBreakString: 1000
PenaltyBreakTemplateDeclaration: 0
PenaltyExcessCharacter: 1000
PenaltyReturnTypeOnItsOwnLine: 1000
PointerAlignment: Middle
ReflowComments: false
SortIncludes: false
SortUsingDeclarations: false
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: false
SpaceAroundPointerQualifiers: Default
SpaceBeforeAssignmentOperators: true
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: ControlStatements
SpaceBeforeRangeBasedForLoopColon: true
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 1
SpacesInAngles:  false
SpacesInContainerLiterals: false
SpacesInCStyleCastParentheses: false
SpacesInParentheses: false
SpacesInSquareBrackets: false
StatementAttributeLikeMacros: []

# Макросы, между которыми делаем отступ
MacroBlockBegin: '^(BEGIN_|I_IMP_QUERY_INTERFACE|POI_DEF)'
MacroBlockEnd:   '^(END_|I_IMP_END_QI|END_POI_DEF)'

# Сюда, по идее, должны пойти макросы, после которых не нужно ставить ;
# Иначе вроде как может доставиться форматтером ???
#StatementMacros:
#  - Q_UNUSED

WhitespaceSensitiveMacros: []

# Макросы, которые должны интерпретироваться как типы
# Макросы не в этом списке будут восприняты как вызовы функций и перенесены на отдельную строку.
TypenameMacros: 
    - IFPTR
    - CIFPTR
    - IUPTR

# Экспортные макросы
    - _EXTERNCLASS
    - _SYSCLASS
    - _SYSFUNC
    - _00200_SYS2CLASS
    - _00200_SYS2FUNC
    - _00300_SYS3CLASS
    - _00300_SYS3FUNC
    - _SYS03CLASS
    - _SYS03FUNC
    - _SYS03FUNC_EX
    - _SYS4CLASS
    - _SYS4FUNC
    - _00500_SYS5CLASS
    - _00500_SYS5FUNC
    - _LIBCLASS
    - _LIBFUNC
    - _LIBFUNC_EX
    - _00600_TEDCLASS
    - _00600_TEDFUNC
    - _00700_ATTRCLASS
    - _00700_ATTRFUNC
    - _00900_OBJ2DCLASS
    - _00900_OBJ2DFUNC
    - _01000_DOC2DCLASS
    - _01000_DOC2DFUNC
    - _01100_PRINTCLASS
    - _01100_PRINTFUNC
    - _01200_APPCLASS
    - _01200_APPFUNC
    - _01210_APPTDCLASS
    - _01210_APPTDFUNC
    - _01210_APPTDFUNC_EX
    - _01250_APP2DCLASS
    - _01250_APP2DFUNC
    - _01250_APP2DFUNC_EX
    - _01300_APP2DCLASS
    - _01300_APP2DFUNC
    - _01300_APP2DFUNC_EX
    - _01350_APP2DCLASS
    - _01350_APP2DFUNC
    - _01350_APP2DFUNC_EX
    - _01370_APP2DCLASS
    - _01370_APP2DFUNC
    - _01370_APP2DFUNC_EX
    - _APP2DCLASS
    - _APP2DFUNC
    - _SPDOCSCLASS
    - _SPDOCSFUNC
    - _04500_RPRTCLASS
    - _04500_RPRTFUNC
    - _04500_RPRTFUNC_EX
    - _KOMRESCLASS
    - _KOMRESFUNC
    - _APROCSCLASS
    - _APROCSFUNC
    - _ATTRCLASS
    - _ATTRFUNC
    - _BPROCSCLASS
    - _BPROCSFUNC
    - _CPROCSCLASS
    - _CPROCSFUNC
    - _DPROCSCLASS
    - _DPROCSFUNC
    - _DOCECLASS
    - _DOCEFUNC
    - _DOCSCLASS
    - _DOCSFUNC
    - _DOCSFUNC_EX
    - _DOCTCLASS
    - _DOCTFUNC
    - _EPROCSCLASS
    - _EPROCSFUNC
    - _FPROCSCLASS
    - _FPROCSFUNC
    - _FSYSCLASS
    - _FSYSFUNC
    - _LANGFUNC
    - _FSYSFUNC_EX
    - _FACECLASS
    - _FACEFUNC
    - _GPROCSCLASS_1350
    - _GPROCSFUNC_1350
    - _GPROCSCLASS_1370
    - _GPROCSFUNC_1370
    - _HPROCSCLASS
    - _HPROCSFUNC
    - _LPROCSCLASS
    - _LPROCSFUNC
    - M3DUTIL_CLASS
    - M3DUTIL_FUNC
    - M3DUTIL_FUNC_EX
    - _OBJECLASS
    - _OBJEFUNC
    - _OBJSCLASS
    - _OBJSFUNC
    - _OBJTCLASS
    - _OBJTFUNC
    - _OPTCLASS
    - _OPTFUNC
    - _OPTFUNC_EX
    - _PPROCSCLASS
    - _PPROCSFUNC
    - _PANSCLASS
    - _PANSFUNC
    - _PRINTCLASS
    - _PRINTFUNC
    - _PRINTFUNC_EX
    - _PROCCLASS
    - _PROCFUNC
    - _PR_DATA_CLASS
    - _PR_DATA_FUNC
    - _SPDOCSCLASS
    - _SPDOCSFUNC
    - _SPC_BASE_CLASS
    - _SPC_BASE_FUNC
    - _TEDCLASS
    - _TEDFUNC
    - _TEDFUNC_EX
    - _TEDBCLASS
    - _TEDBFUNC
    - _TEDBFUNC_EX
    - _TEDDCLASS
    - _TEDDFUNC
    - _TEDECLASS
    - _TEDEFUNC
    - _TPROCSCLASS
    - _TPROCSFUNC
    - _VIEWCLASS
    - _VIEWFUNC
    - _VIEWFUNC_EX
    - _03100_OBJ3DCLASS
    - _03100_OBJ3DFUNC
    - _OBJ01CLASS
    - _OBJ01FUNC
    - _03100_OBJ3DFUNC_EX
    - _03200_OBJ3DCLASS
    - _03200_OBJ3DFUNC
    - _OBJ02CLASS
    - _OBJ02FUNC
    - _03200_OBJ3DFUNC_EX
    - _03300_ASSDRAFTCLASS
    - _03300_ASSDRAFTFUNC
    - _03300_ASSDRAFTFUNC_EX
    - _03400_DOC3DCLASS
    - _03400_DOC3DFUNC
    - _DOC04CLASS
    - _DOC04FUNC
    - _03400_DOC3DFUNC_EX
    - _03500_APP3DCLASS
    - _03500_APP3DFUNC
    - _APP01CLASS
    - _APP01FUNC
    - _03500_APP3DFUNC_EX
    - _03600_APP3DCLASS
    - _03600_APP3DFUNC
    - _APP02CLASS
    - _APP02FUNC
    - _03600_APP3DFUNC_EX
    - _03700_APP3DCLASS
    - _03700_APP3DFUNC
    - _APP03CLASS
    - _APP03FUNC
    - _03700_APP3DFUNC_EX
    - _03900_APP3DCLASS
    - _03900_APP3DFUNC
    - _APP11CLASS
    - _APP11FUNC
    - _03900_APP3DFUNC_EX
    - _09100_LIBAUTOOLDCLASS
    - _09100_LIBAUTOOLDFUNC
    - _09100_LIBAUTOOLDFUNC_EX
    - _LIBTOOLCLASS
    - _LIBTOOLFUNC
    - _LIBTOOLACLASS
    - _LIBTOOLAFUNC
    - _LODBCCLASS
    - _LODBCFUNC
    - _LIBOLDFUNC
    - _LIBTOOLFUNC_EX
    - _04000_APPTOOL3DCLASS
    - _04000_APPTOOL3DFUNC
    - _04000_APPTOOL3DFUNC_EX
    - API7CLASS
    - API7FUNC
